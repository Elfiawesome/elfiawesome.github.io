document.addEventListener('DOMContentLoaded', main);

const columnValue = {
	NAME: 0,
	VALUE: 1,
	DOMAIN: 2,
	PATH: 3,
	EXPIRES: 4,
	SIZE: 5,
	HTTP_ONLY: 6,
	SECURE: 7,
	SAME_SITE: 8,
	PARTITION_SITE_KEY: 9,
	CROSS_SITE: 10,
	PRIORITY: 11,
	MAX: 12
};


function main() {
	const inputTextElement = document.getElementById('input-text');
	const outputTextElement = document.getElementById('output-text');
	const convertButtonElement = document.getElementById('convert-button');
	const downloadButtonElement = document.getElementById('download-button');
	const copyTextButtonElement = document.getElementById('copy-text-button');

	convertButtonElement.addEventListener('click', onConvertClicked)
	downloadButtonElement.addEventListener('click', onDownloadClicked)
	copyTextButtonElement.addEventListener('click', onCopyTextClicked)

	function onConvertClicked() {
		const columnValue = {
			NAME: 0,
			VALUE: 1,
			DOMAIN: 2,
			PATH: 3,
			EXPIRES: 4,
			SIZE: 5,
			HTTP_ONLY: 6,
			SECURE: 7,
			SAME_SITE: 8,
			PARTITION_SITE_KEY: 9,
			CROSS_SITE: 10,
			PRIORITY: 11,
			MAX: 12
		};

		var netscapeCookieText = "# Netscape HTTP Cookie File\n# Generated by elfiawesome.github.io.\n# Edit at your own risk.\n\n";

		const lines = inputTextElement.value.split("\n");

		lines.forEach(lineText => {
			const lineColumns = lineText.split("\t");
			if (lineColumns.length < columnValue.MAX) { return; }

			let domain = lineColumns[columnValue.DOMAIN];
			if (!domain.startsWith(".")) { domain = "." + domain; }

			const includeSubdomains = "TRUE"; // Just set to alwats true cuz idk what this is

			const path = lineColumns[columnValue.PATH];

			const secureValue = lineColumns[columnValue.SECURE];
			const secure = (secureValue === "âœ“" || secureValue.toLowerCase() === 'true') ? "TRUE" : "FALSE";

			const expiryStr = lineColumns[columnValue.EXPIRES];
			let expiry;
			if (expiryStr === "Session") {
				expiry = 0;
			} else {
				const date = new Date(expiryStr);
				expiry = Math.floor(date.getTime() / 1000);
			}

			const name = lineColumns[columnValue.NAME];
			const value = lineColumns[columnValue.VALUE];

			netscapeCookieText += [domain, includeSubdomains, path, secure, expiry, name, value].join("\t") + "\n";
		});

		outputTextElement.textContent = netscapeCookieText;

		if (netscapeCookieText.length > 0) {
			downloadButtonElement.disabled = false;
			copyTextButtonElement.disabled = false;
		}
	}

	function onDownloadClicked() {
		const outputText = outputTextElement.textContent;
		if (!outputText) return

		// Create download link and blob
		const blob = new Blob([outputText], { type: 'text/plain' });
		const url = URL.createObjectURL(blob);
		const a = document.createElement('a');

		a.href = url
		a.download = 'netscape-cookies.txt';
		document.body.appendChild(a);
		a.click();
		document.body.removeChild(a);
		URL.revokeObjectURL(url);
	}

	function onCopyTextClicked() {
		const outputText = outputTextElement.textContent;
		navigator.clipboard.writeText(outputText);
	}
}